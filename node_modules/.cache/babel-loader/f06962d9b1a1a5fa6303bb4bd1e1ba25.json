{"ast":null,"code":"var _jsxFileName = \"/Users/mayankkumar/Documents/Filter-Conditions/src/components/Filter.js\";\nimport React from \"react\";\nconst options = [{\n  type: 'number',\n  label: 'Number'\n}, {\n  type: 'tel',\n  label: 'Telephone'\n}, {\n  type: 'email',\n  label: 'Email'\n}, {\n  type: 'date',\n  label: 'Date'\n}];\n\nfunction Filter(props) {\n  const filter = props.filter,\n        updateTypeValue = props.updateTypeValue;\n  const id = filter.id,\n        type = filter.type,\n        value = filter.value;\n  return React.createElement(\"div\", {\n    class: \"display-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    class: \"filter-type\",\n    onChange: ev => updateTypeValue(id, ev.target.value, null),\n    value: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, options.map(opt => {\n    return React.createElement(\"option\", {\n      key: opt.type,\n      value: opt.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, opt.label);\n  })), type === 'tel' ? React.createElement(\"input\", {\n    class: \"filter-value\",\n    onChange: ev => updateTypeValue(id, null, ev.target.value),\n    required: true,\n    type: type,\n    value: value,\n    name: \"\".concat(type, \"-\").concat(id),\n    placeholer: \"Enter Value\",\n    pattern: \"[789][0-9]{9}\",\n    title: \"Please enter a 10 digit number starting with 7/8/9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(\"input\", {\n    class: \"filter-value\",\n    onChange: ev => updateTypeValue(id, null, ev.target.value),\n    required: true,\n    type: type,\n    value: value,\n    name: \"\".concat(type, \"-\").concat(id),\n    placeholer: \"Enter Value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/mayankkumar/Documents/Filter-Conditions/src/components/Filter.js"],"names":["React","options","type","label","Filter","props","filter","updateTypeValue","id","value","ev","target","map","opt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,IAAI,EAAE,KADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATc,EAad;AACED,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbc,CAAhB;;AAmBA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,QACbC,MADa,GACeD,KADf,CACbC,MADa;AAAA,QACLC,eADK,GACeF,KADf,CACLE,eADK;AAAA,QAEbC,EAFa,GAEOF,MAFP,CAEbE,EAFa;AAAA,QAETN,IAFS,GAEOI,MAFP,CAETJ,IAFS;AAAA,QAEHO,KAFG,GAEOH,MAFP,CAEHG,KAFG;AAGrB,SACE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,aAAd;AAA4B,IAAA,QAAQ,EAAEC,EAAE,IAAIH,eAAe,CAACC,EAAD,EAAKE,EAAE,CAACC,MAAH,CAAUF,KAAf,EAAsB,IAAtB,CAA3D;AAAwF,IAAA,KAAK,EAAEP,IAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,OAAO,CAACW,GAAR,CAAYC,GAAG,IAAI;AACjB,WAAO;AAAQ,MAAA,GAAG,EAAEA,GAAG,CAACX,IAAjB;AAAuB,MAAA,KAAK,EAAEW,GAAG,CAACX,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCW,GAAG,CAACV,KAA7C,CAAP;AACD,GAFD,CAFJ,CADF,EAQGD,IAAI,KAAK,KAAT,GACC;AAAO,IAAA,KAAK,EAAC,cAAb;AAA4B,IAAA,QAAQ,EAAEQ,EAAE,IAAIH,eAAe,CAACC,EAAD,EAAK,IAAL,EAAWE,EAAE,CAACC,MAAH,CAAUF,KAArB,CAA3D;AAAwF,IAAA,QAAQ,MAAhG;AAAiG,IAAA,IAAI,EAAEP,IAAvG;AAA6G,IAAA,KAAK,EAAEO,KAApH;AAA2H,IAAA,IAAI,YAAKP,IAAL,cAAaM,EAAb,CAA/H;AAAkJ,IAAA,UAAU,EAAC,aAA7J;AAA2K,IAAA,OAAO,EAAC,eAAnL;AAAmM,IAAA,KAAK,EAAC,oDAAzM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEC;AAAO,IAAA,KAAK,EAAC,cAAb;AAA4B,IAAA,QAAQ,EAAEE,EAAE,IAAIH,eAAe,CAACC,EAAD,EAAK,IAAL,EAAWE,EAAE,CAACC,MAAH,CAAUF,KAArB,CAA3D;AAAwF,IAAA,QAAQ,MAAhG;AAAiG,IAAA,IAAI,EAAEP,IAAvG;AAA6G,IAAA,KAAK,EAAEO,KAApH;AAA2H,IAAA,IAAI,YAAKP,IAAL,cAAaM,EAAb,CAA/H;AAAkJ,IAAA,UAAU,EAAC,aAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD;;AAED,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\n\nconst options = [\n  {\n    type: 'number',\n    label: 'Number'\n  },\n  {\n    type: 'tel',\n    label: 'Telephone'\n  },\n  {\n    type: 'email',\n    label: 'Email'\n  },\n  {\n    type: 'date',\n    label: 'Date'\n  }\n];\n\nfunction Filter(props) {\n  const { filter, updateTypeValue } = props;\n  const { id, type, value } = filter;\n  return (\n    <div class=\"display-flex\">\n      <select class=\"filter-type\" onChange={ev => updateTypeValue(id, ev.target.value, null)} value={type}>\n        {\n          options.map(opt => {\n            return <option key={opt.type} value={opt.type}>{opt.label}</option>\n          })\n        }\n      </select>\n      {type === 'tel' ?\n        <input class=\"filter-value\" onChange={ev => updateTypeValue(id, null, ev.target.value)} required type={type} value={value} name={`${type}-${id}`} placeholer=\"Enter Value\" pattern=\"[789][0-9]{9}\" title=\"Please enter a 10 digit number starting with 7/8/9\"/> :\n        <input class=\"filter-value\" onChange={ev => updateTypeValue(id, null, ev.target.value)} required type={type} value={value} name={`${type}-${id}`} placeholer=\"Enter Value\"/>\n      }\n    </div>\n  );\n}\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}